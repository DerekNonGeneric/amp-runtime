{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/config.js","src/service-worker/core.js","third_party/babel/custom-babel-helpers.js"],"names":[],"mappings":"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","file":"cache-service-worker-0.1.max.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ?\n    new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ?\n    new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  cdnProxyRegex: cdnProxyRegex ||\n      /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] ||\n      'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n};\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '../../third_party/babel/custom-babel-helpers';\nimport {urls} from '../config';\n\n/**\n * An AMP Release version, not to be confused with an RTV version\n * @typedef {string}\n */\nexport let AmpVersion;\n\n/**\n * An RTV version, not to be confused with an AMP Release version.\n * @typedef {string}\n */\nexport let RtvVersion;\n\n/**\n * An environment of the RTV version.\n * @typedef {string}\n */\nexport let RtvEnvironment;\n\n/** @const */\nconst TAG = 'cache-service-worker';\n\n/**\n * A list of blacklisted AMP versions that must never be served from\n * cache. Versions may be blacklisted if they contain a significant\n * implementation bug.\n * @type {!Array<AmpVersion>}\n */\nconst BLACKLIST = self.AMP_CONFIG[`${TAG}-blacklist`] || [];\n\n/**\n * The SW's current version.\n * @const\n * @type {RtvVersion}\n */\nconst BASE_RTV_VERSION = self.AMP_CONFIG.v;\n\n/**\n * The SW's current environment.\n * @const\n * @type {RtvEnvironment}\n */\nconst BASE_RTV_ENVIRONMENT = rtvEnvironment(BASE_RTV_VERSION);\n\n/**\n * Our cache of CDN JS files.\n *\n * @type {!Cache}\n */\nlet cache;\n\n/**\n * A mapping from a Client's (unique per tab _and_ refresh) ID to the AMP\n * release version we are serving it.\n *\n * @type {!Object<string, !Promise<!RtvVersion>>}\n */\nconst clientsVersion = Object.create(null);\n\n/**\n * A mapping from a client's referrer into the time that referrer last made a\n * request. This is used as a fallback to a clientId for Foreign Fetch, since\n * it does not provide a unique clientId.\n *\n * This object will hopefully not grow too large. When the SW is terminated,\n * it'll use a brand new object on restart.\n *\n * @type {!Object<string, number>}\n */\nconst referrersLastRequestTime = Object.create(null);\n\n/**\n * A mapping from a URL to a fetch request for that URL. This is used to batch\n * repeated requests into a single fetch. This batching is deleted after the\n * fetch completes.\n *\n * @type {!Object<string, !Promise<!Response>>}\n */\nconst fetchPromises = Object.create(null);\n\n\n/**\n * A regex that matches every CDN JS URL we care to cache.\n * The \"experiments\" and \"validator\" JS is explicitly disallowed.\n *\n * The RTV will be the first capture group, if it is present.\n * The pathname will be the second capture group.\n *\n * Matched URLS include:\n *  - https://cdn.ampproject.org/v0.js\n *  - https://cdn.ampproject.org/v0/amp-comp.js\n *  - https://cdn.ampproject.org/rtv/123456789012345/v0.js\n *  - https://cdn.ampproject.org/rtv/123456789012345/v0/amp-comp.js\n *\n * Unmatched URLS include:\n *  - https://cdn.ampproject.org/v0/experiments.js\n *  - https://cdn.ampproject.org/v0/validator.js\n */\nconst CDN_JS_REGEX = new RegExp(\n    // Require the CDN URL origin at the beginning.\n    `^${urls.cdn.replace(/\\./g, '\\\\.')}` +\n    // Allow, but don't require, RTV.\n    '(?:/rtv/(\\\\d{2}\\\\d{13,}))?' +\n    // Require text \"/v0\"\n    '(/v0' +\n      // Allow, but don't require, an extension under the v0 directory.\n      // We explicitly forbid the `experiments` and `validator` \"extension\".\n      '(?:/(?!experiments|validator).+)?' +\n    // Require text \".js\" at the end.\n    '\\\\.js)$');\n\n\n/**\n * Determines if a URL is a request to a CDN JS file.\n *\n * @param {string} url\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isCdnJsFile(url) {\n  return CDN_JS_REGEX.test(url);\n}\n\n/**\n * Returns the environment of the RTV.\n * @param {!RtvVersion} rtv\n * @return {!RtvEnvironment}\n */\nfunction rtvEnvironment(rtv) {\n  return rtv.substr(0, 2);\n}\n\n/**\n * Extracts the data from the request URL.\n * @param {string} url\n * @return {{\n *   explicitRtv: !RtvVersion,\n *   pathname: string,\n *   rtv: !RtvVersion,\n * }|null}\n * @visibleForTesting\n */\nexport function requestData(url) {\n  const match = CDN_JS_REGEX.exec(url);\n  if (!match) {\n    return null;\n  }\n  const data = {\n    explicitRtv: match[1] || '',\n    pathname: match[2],\n    rtv: match[1] || BASE_RTV_VERSION,\n  };\n  return data;\n}\n\n/**\n * Returns the URL with the requested version changed to `version`.\n *\n * @param {string} url\n * @param {!RtvVersion} version\n * @return {string}\n * @visibleForTesting\n */\nexport function urlWithVersion(url, version) {\n  const data = requestData(url);\n  if (!data) {\n    return url;\n  }\n  const {explicitRtv, pathname} = data;\n  if (explicitRtv) {\n    return url.replace(explicitRtv, version);\n  }\n  return url.replace(pathname, `/rtv/${version}${pathname}`);\n}\n\n/**\n * Normalizes the request to a new RTV version. This handles changing the\n * request from one version to another, or rewriting an unversioned request to\n * a versioned.\n *\n * @param {!Request} request\n * @param {!RtvVersion} version\n * @return {!Request}\n */\nfunction normalizedRequest(request, version) {\n  const url = request.url;\n  const data = requestData(url);\n  if (data && data.explicitRtv === version) {\n    return request;\n  }\n\n  return new Request(urlWithVersion(url, version), {\n    // For Foreign Fetch, constructing a request using an origin that does\n    // not match the SW's is mutinous.\n    referer: `${urls.cdn}/sw.js`,\n    headers: request.headers,\n    method: request.method,\n    mode: request.mode,\n    credentials: request.credentials,\n    cache: request.cache,\n    redirect: request.redirect,\n    integrity: request.integrity,\n  });\n}\n\n/**\n * Determines if a AMP version is blacklisted.\n * @param {!RtvVersion} version\n * @return {boolean}\n * @visibleForTesting\n */\nexport function isBlacklisted(version) {\n  /**\n   * Trim the RTV perfix.\n   * @type {AmpVersion}\n   */\n  const ampVersion = version.substr(2);\n  return BLACKLIST.indexOf(ampVersion) > -1;\n}\n\n/**\n * Generates a clientId for Foreign Fetchs, since one is not provided.\n *\n * The current strategy is to batch all requests from referrer that happen\n * within 60 seconds (of the first request) into one clientId.\n *\n * @param {string} referrer\n * @return {string}\n * @visibleForTesting\n */\nexport function generateFallbackClientId(referrer) {\n  const now = Date.now();\n  let lastRequestTime = referrersLastRequestTime[referrer] || 0;\n\n  // If last request was more than 60 seconds ago, we are now in a new\n  // \"clientId\".\n  if (lastRequestTime < now - (60 * 1000)) {\n    lastRequestTime = referrersLastRequestTime[referrer] = now;\n  }\n\n  return referrer + lastRequestTime;\n}\n\n/**\n * Fetches a URL, and stores it into the cache if the response is valid.\n * Repeated fetches of the same URL will be batched into a single request while\n * the first is still fetching.\n *\n * @param {!Cache} cache\n * @param {!Request} request\n * @return {!Promise<!Response>}\n * @visibleForTesting\n */\nexport function fetchAndCache(cache, request) {\n  const url = request.url;\n\n  // Batch fetches. Mainly for the /diversions endpoint.\n  if (fetchPromises[url]) {\n    return fetchPromises[url].then(() => {\n      return cache.match(request);\n    });\n  }\n\n  return fetchPromises[url] = cache.match(request)\n      .then(response => {\n        if (response && !expired(response)) {\n          delete fetchPromises[url];\n          return response;\n        }\n\n        return fetch(request).then(response => {\n          delete fetchPromises[url];\n\n          // Did we receive a invalid response?\n          if (!response.ok) {\n            throw new Error(`fetching ${url} failed with statusCode ` +\n                `${response.status}.`);\n          }\n\n          // You must clone to prevent double reading the body.\n          cache.put(request, response.clone());\n          return response;\n        }, err => {\n          delete fetchPromises[url];\n          throw err;\n        });\n      });\n}\n\n/**\n * Checks if a (valid) response has expired.\n *\n * @param {!Response} response\n * @return {boolean}\n * @visibleForTesting\n */\nexport function expired(response) {\n  const {headers} = response;\n\n  if (!headers.has('date') || !headers.has('cache-control')) {\n    return true;\n  }\n\n  const maxAge = /max-age=(\\d+)/i.exec(headers.get('cache-control'));\n  const date = headers.get('date');\n  const age = maxAge ? maxAge[1] * 1000 : -Infinity;\n  return Date.now() >= Number(new Date(date)) + age;\n}\n\n/**\n * Returns the active percent diversions.\n *\n * @param {!Cache} cache\n * @return {!Promise<!Array<!RtvVersion>>}\n * @visibleForTesting\n */\nexport function diversions(cache) {\n  const request = new Request(`${urls.cdn}/diversions`);\n\n  return fetchAndCache(cache, request).then(response => {\n    return response.json();\n  }).then(diversions => {\n    if (!Array.isArray(diversions)) {\n      return null;\n    }\n\n    return diversions;\n  }, () => null);\n}\n\n/*\n * Resets clientsVersion, referrersLastRequestTime, and fetchPromises.\n * @visibleForTesting\n */\nexport function resetMemosForTesting() {\n  for (const key in clientsVersion) {\n    delete clientsVersion[key];\n  }\n  for (const key in referrersLastRequestTime) {\n    delete referrersLastRequestTime[key];\n  }\n  for (const key in fetchPromises) {\n    delete fetchPromises[key];\n  }\n}\n\n\n/**\n * A promise to open up our CDN JS cache, which will be resolved before any\n * requests are intercepted by the SW.\n *\n * @type {!Promise}\n */\nconst cachePromise = self.caches.open('cdn-js').then(result => {\n  cache = result;\n});\n\n/**\n * Fetches the request, and stores it in the cache. Since we only store one\n * version of each file, we'll purge all older versions after we cache this.\n *\n * @param {!Cache} cache\n * @param {!Request} request\n * @param {!RtvVersion} requestVersion the version of the request\n * @param {string} requestPath the pathname of the request\n * @return {!Promise<!Response>}\n * @visibleForTesting\n */\nexport function fetchJsFile(cache, request, requestVersion, requestPath) {\n  // TODO(jridgewell): we should also fetch this requestVersion for all files\n  // we know about.\n  return fetchAndCache(cache, request).then(response => {\n    // Fetch all diversions of this file.\n    // This intentionally does not block the request resolution to speed\n    // things up.\n    diversions(cache).then(diversions => {\n      // Prune old versions from the cache.\n      // This also purges old diversions of other scripts, see `purge` for\n      // detailed information.\n      purge(cache, requestVersion, requestPath, diversions);\n\n      if (!diversions) {\n        return;\n      }\n      let p = new Promise(resolve => {\n        // Delay initial diversions requests by 10 seconds.\n        // This is because diversions are low priority compared to page\n        // content.\n        setTimeout(resolve, 10000);\n      });\n      for (let i = 0; i < diversions.length; i++) {\n        p = p.then(() => {\n          const diversionRequest = normalizedRequest(request, diversions[i]);\n          return fetchAndCache(cache, diversionRequest);\n        });\n      }\n    });\n\n    return response;\n  });\n}\n\n/**\n * Purges our cache of old files.\n *\n * @param {!Cache} cache\n * @param {!RtvVersion} version\n * @param {string} pathname\n * @param {?Array<!RtvVersion>} diversions\n * @return {!Promise<undefined>}\n */\nfunction purge(cache, version, pathname, diversions) {\n  return cache.keys().then(requests => {\n    const downloadedEnv = rtvEnvironment(version);\n\n    for (let i = 0; i < requests.length; i++) {\n      const request = requests[i];\n      const url = request.url;\n      const cachedData = requestData(url);\n      if (!cachedData) {\n        continue;\n      }\n\n      // We never delete files that match the version we just downloaded.\n      if (version === cachedData.rtv) {\n        continue;\n      }\n\n      const cachedEnv = rtvEnvironment(cachedData.rtv);\n      const cachedIsProd = BASE_RTV_ENVIRONMENT === cachedEnv;\n\n\n      if (cachedIsProd) {\n        // We prune production environments based on the downloaded version.\n        // But, if we downloaded a diversion, we have no information on what\n        // the current production version is. So, don't delete the production\n        // script.\n        if (BASE_RTV_ENVIRONMENT !== downloadedEnv) {\n          continue;\n        }\n\n        // We only purge the old version of the newly downloaded file.\n        // This is because we might request this particular other script later\n        // on in this request, and will purge it then.\n        if (pathname !== cachedData.pathname) {\n          continue;\n        }\n      } else {\n        // We will only delete a diversion if we know for certain the versions\n        // that are diversions.\n        if (!diversions || diversions.includes(cachedData.rtv)) {\n          continue;\n        }\n      }\n\n      // At this point, we know the cached file is either:\n      // - An old production env of the newly downloaded script.\n      // - An old diversion.\n      // Importantly, it CANNOT be one of the following:\n      // - The same version as the newly fetched script (This is the current\n      //   production version or a current diversion).\n      // - Any production version when we downloaded a diversion.\n      // - Any production version of any other script.\n      // - A current diversion, or a suspected diversion.\n      cache.delete(request);\n    }\n  });\n}\n\n/**\n * Gets the version we want to serve for this client. We attempt to serve the\n * version with the most cached files, with a additional weight given to the\n * main binary and the first requested file.\n *\n * @param {!Cache} cache\n * @param {!RtvVersion} requestVersion\n * @param {string} requestPath\n * @return {!Promise<!RtvVersion>}\n * @visibleForTesting\n */\nexport function getCachedVersion(cache, requestVersion, requestPath) {\n  const requestEnv = rtvEnvironment(requestVersion);\n  // If a request comes in for a version that does not match the SW's\n  // environment (eg, a percent diversion when the SW is using the production\n  // env), we must serve with the requested version.\n  if (requestEnv !== BASE_RTV_ENVIRONMENT) {\n    return Promise.resolve(requestVersion);\n  }\n\n  // TODO(jridgewell): Maybe we should add a very short delay (~5ms) to collect\n  // several requests. Then, use all requests to determine what to serve.\n  return cache.keys().then(requests => {\n    const counts = {};\n    let most = requestVersion;\n    let mostCount = 0;\n\n    // Generates a weighted maximum version, ie the version with the most\n    // cached files. Given every file we've cached, determine what version\n    // it is, and increment the number of files we have for that version.\n    for (let i = 0; i < requests.length; i++) {\n      const url = requests[i].url;\n      const data = requestData(url);\n      if (!data) {\n        continue;\n      }\n\n      const {pathname, rtv} = data;\n\n      // We will not stale serve a version that does not match the request's\n      // environment. This is so cached percent diversions will not be \"stale\"\n      // served when requesting a production script.\n      if (requestEnv !== rtvEnvironment(rtv)) {\n        continue;\n      }\n\n      // We do not want to stale serve blacklisted files. If nothing else is\n      // cached, we will end up serving whatever version is requested.\n      if (isBlacklisted(rtv)) {\n        continue;\n      }\n\n      let count = counts[rtv] || 0;\n\n      // Incrementing the number of \"files\" that have this version with a\n      // weight.\n      // The main binary (arguably the most important file to cache) is given a\n      // heavy weight, while the first requested file is given a slight weight.\n      // Everything else increments normally.\n      if (!pathname.includes('/', 1)) {\n        // Main binary\n        count += 5;\n      } else if (requestPath === pathname) {\n        // Give a little precedence to the requested file\n        count += 2;\n      } else {\n        count++;\n      }\n\n      counts[rtv] = count;\n      if (count > mostCount) {\n        most = rtv;\n        mostCount = count;\n      }\n    }\n\n    return most;\n  });\n}\n\n/**\n * Handles fetching the request from Cache, or fetching and caching from the\n * Cache CDN, if we care about the request.\n * My assumptions:\n *   - Doc requests one uniform AMP release version for all files, anything\n *     else is malarkey.\n *   - The requested version is always the newest AMP version.\n *\n * @param {!Request} request\n * @param {string|undefined} maybeClientId\n * @return {?Promise<!Response>}\n * @visibleForTesting\n */\nexport function handleFetch(request, maybeClientId) {\n  const url = request.url;\n  // We only cache CDN JS files, and we need a clientId to do our magic.\n  const data = requestData(url);\n\n  if (!maybeClientId || !data) {\n    return null;\n  }\n\n  // Closure Compiler!\n  const clientId = /** @type {string} */(maybeClientId);\n  const {pathname, rtv} = data;\n\n  // Rewrite unversioned requests to the versioned RTV URL. This is a noop if\n  // it's already versioned.\n  request = normalizedRequest(request, rtv);\n\n  // Wait for the cachePromise to resolve. This is necessary\n  // since the SW thread may be killed and restarted at any time.\n  return /** @type {!Promise<!Response>} */ (cachePromise.then(() => {\n    // If we already registered this client, we must always use the same\n    // version.\n    if (clientsVersion[clientId]) {\n      return clientsVersion[clientId];\n    }\n\n    // If not, let's find the version to serve up.\n    return clientsVersion[clientId] = getCachedVersion(cache, rtv, pathname);\n  }).then(version => {\n    const versionedRequest = normalizedRequest(request, version);\n\n    return cache.match(versionedRequest).then(response => {\n      // Cache hit!\n      if (response) {\n        // Now, was it because we served an old cached version or because\n        // they requested this exact version; If we served an old version,\n        // let's get the new one.\n        if (version !== rtv && rtv == BASE_RTV_VERSION) {\n          fetchJsFile(cache, request, rtv, pathname);\n        }\n\n        return response;\n      }\n\n      // If not, let's fetch and cache the request.\n      return fetchJsFile(cache, versionedRequest, version, pathname);\n    });\n  }).catch(err => {\n    // Throw error out of band.\n    Promise.reject(err);\n    throw err;\n  }));\n}\n\n\nself.addEventListener('install', install => {\n  install.waitUntil(cachePromise);\n  // Registers the SW for Foreign Fetch events, if they are supported.\n  if (install.registerForeignFetch) {\n    install.registerForeignFetch({\n      scopes: [/** @type {!ServiceWorkerGlobalScope} */(\n          self).registration.scope],\n      origins: ['*'],\n    });\n  }\n});\n\n// Setup the Fetch listener, for when the client is on the CDN origin.\nself.addEventListener('fetch', event => {\n  const response = handleFetch(event.request, event.clientId);\n\n  // We only get a response promise back if it's a request we care to cache.\n  if (!response) {\n    return;\n  }\n\n  event.respondWith(response);\n});\n\n// Setup the Foreign Fetch listener, for when the client is on a Publisher\n// origin.\nself.addEventListener('foreignfetch', event => {\n  const response = handleFetch(event.request,\n      (event.clientId || generateFallbackClientId(event.request.referrer)));\n\n  // We only get a response promise back if it's a request we care to cache.\n  if (!response) {\n    return;\n  }\n\n  event.respondWith(response.then(resp => {\n    // Foreign Fetch requires a { response: !Response } object.\n    return {\n      response: resp,\n      // This allows CORS requests, if one were to come in.\n      origin: event.origin,\n    };\n  }));\n});\n","(function (global) {\n  var babelHelpers = global.babelHelpers = {};\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.createClass = (function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })();\n\n  babelHelpers.slice = Array.prototype.slice;\n  babelHelpers.bind = Function.prototype.bind;\n\n  babelHelpers.interopRequireWildcard = function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n\n      newObj[\"default\"] = obj;\n      return newObj;\n    }\n  };\n\n  babelHelpers.interopRequireDefault = function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  };\n\n  babelHelpers.get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.defineProperty = function(obj, key, value) {\n      obj[key] = value;\n      return obj;\n  };\n})(typeof global === \"undefined\" ? self : global);\n"]}