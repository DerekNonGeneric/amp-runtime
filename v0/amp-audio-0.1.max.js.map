{"version":3,"sources":["node_modules/browser-pack/_prelude.js","extensions/amp-audio/0.1/amp-audio.js","src/config.js","src/layout.js","src/log.js","src/mode-object.js","src/mode.js","src/string.js","src/style.js","src/types.js","src/url-parse-query-string.js","src/url.js","src/utils/object.js"],"names":[],"mappings":"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","file":"amp-audio-0.1.max.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Layout} from '../../../src/layout';\nimport {assertHttpsUrl} from '../../../src/url';\nimport {dev} from '../../../src/log';\n\n/**\n * Visible for testing only.\n */\nexport class AmpAudio extends AMP.BaseElement {\n\n  /** @param {!AmpElement} element */\n  constructor(element) {\n    super(element);\n\n    /** @private {?Element} */\n    this.audio_ = null;\n  }\n\n  /** @override */\n  isLayoutSupported(layout) {\n    return layout == Layout.FIXED || layout == Layout.FIXED_HEIGHT;\n  }\n\n\n  /** @override */\n  layoutCallback() {\n    const audio = this.element.ownerDocument.createElement('audio');\n    if (!audio.play) {\n      this.toggleFallback(true);\n      return Promise.resolve();\n    }\n\n    // Force controls otherwise there is no player UI.\n    audio.controls = true;\n    if (this.element.getAttribute('src')) {\n      assertHttpsUrl(this.element.getAttribute('src'), this.element);\n    }\n    this.propagateAttributes(\n        ['src', 'autoplay', 'muted', 'loop', 'aria-label',\n          'aria-describedby', 'aria-labelledby'],\n        audio);\n\n    this.applyFillContent(audio);\n    this.getRealChildNodes().forEach(child => {\n      if (child.getAttribute && child.getAttribute('src')) {\n        assertHttpsUrl(child.getAttribute('src'),\n            dev().assertElement(child));\n      }\n      audio.appendChild(child);\n    });\n    this.element.appendChild(audio);\n    this.audio_ = audio;\n    return this.loadPromise(audio);\n  }\n\n  /** @override */\n  pauseCallback() {\n    if (this.audio_) {\n      this.audio_.pause();\n    }\n  }\n}\n\nAMP.registerElement('amp-audio', AmpAudio);\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows for runtime configuration. Internally, the runtime should\n * use the src/config.js module for various constants. We can use the\n * AMP_CONFIG global to translate user-defined configurations to this\n * module.\n * @type {!Object<string, string>}\n */\nconst env = self.AMP_CONFIG || {};\n\nconst thirdPartyFrameRegex = typeof env['thirdPartyFrameRegex'] == 'string' ?\n    new RegExp(env['thirdPartyFrameRegex']) : env['thirdPartyFrameRegex'];\n\nconst cdnProxyRegex = typeof env['cdnProxyRegex'] == 'string' ?\n    new RegExp(env['cdnProxyRegex']) : env['cdnProxyRegex'];\n\n/** @type {!Object<string, string|boolean|RegExp>} */\nexport const urls = {\n  thirdParty: env['thirdPartyUrl'] || 'https://3p.ampproject.net',\n  thirdPartyFrameHost: env['thirdPartyFrameHost'] || 'ampproject.net',\n  thirdPartyFrameRegex: thirdPartyFrameRegex || /^d-\\d+\\.ampproject\\.net$/,\n  cdn: env['cdnUrl'] || 'https://cdn.ampproject.org',\n  cdnProxyRegex: cdnProxyRegex ||\n      /^https:\\/\\/([a-zA-Z0-9_-]+\\.)?cdn\\.ampproject\\.org/,\n  localhostRegex: /^https?:\\/\\/localhost(:\\d+)?$/,\n  errorReporting: env['errorReportingUrl'] ||\n      'https://amp-error-reporting.appspot.com/r',\n  localDev: env['localDev'] || false,\n};\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implements element layout. See https://goo.gl/9avXuT for\n * details.\n */\n\nimport {dev, user} from './log';\nimport {isFiniteNumber} from './types';\nimport {setStyles} from './style';\nimport {startsWith} from './string';\n\n/**\n * @enum {string}\n */\nexport const Layout = {\n  NODISPLAY: 'nodisplay',\n  FIXED: 'fixed',\n  FIXED_HEIGHT: 'fixed-height',\n  RESPONSIVE: 'responsive',\n  CONTAINER: 'container',\n  FILL: 'fill',\n  FLEX_ITEM: 'flex-item',\n};\n\n\n/**\n * CSS Length type. E.g. \"1px\" or \"20vh\".\n * @typedef {string}\n */\nexport let LengthDef;\n\n\n/**\n * @typedef {{\n *   width: string,\n *   height: string\n * }}\n */\nlet DimensionsDef;\n\n\n/**\n * The set of elements with natural dimensions, that is, elements\n * which have a known dimension either based on their value specified here,\n * or, if the value is null, a dimension specific to the browser.\n * `hasNaturalDimensions` checks for membership in this set.\n * `getNaturalDimensions` determines the dimensions for an element in the\n *    set and caches it.\n * @type {!Object<string, ?DimensionsDef>}\n * @private  Visible for testing only!\n */\nexport const naturalDimensions_ = {\n  'AMP-PIXEL': {width: '0px', height: '0px'},\n  'AMP-ANALYTICS': {width: '1px', height: '1px'},\n  // TODO(dvoytenko): audio should have width:auto.\n  'AMP-AUDIO': null,\n  'AMP-SOCIAL-SHARE': {width: '60px', height: '44px'},\n};\n\n\n/**\n * Elements that the progess can be shown for. This set has to be externalized\n * since the element's implementation may not be downloaded yet.\n * @enum {boolean}\n * @private  Visible for testing only!\n */\nexport const LOADING_ELEMENTS_ = {\n  'AMP-ANIM': true,\n  'AMP-BRIGHTCOVE': true,\n  'AMP-EMBED': true,\n  'AMP-IFRAME': true,\n  'AMP-IMG': true,\n  'AMP-INSTAGRAM': true,\n  'AMP-LIST': true,\n  'AMP-OOYALA-PLAYER': true,\n  'AMP-PINTEREST': true,\n  'AMP-PLAYBUZZ': true,\n  'AMP-VIDEO': true,\n  'AMP-YOUTUBE': true,\n};\n\n\n/**\n * @param {string} s\n * @return {Layout|undefined} Returns undefined in case of failure to parse\n *   the layout string.\n */\nexport function parseLayout(s) {\n  for (const k in Layout) {\n    if (Layout[k] == s) {\n      return Layout[k];\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {!Layout} layout\n * @return {string}\n */\nexport function getLayoutClass(layout) {\n  return 'i-amphtml-layout-' + layout;\n}\n\n\n/**\n * Whether an element with this layout inherently defines the size.\n * @param {!Layout} layout\n * @return {boolean}\n */\nexport function isLayoutSizeDefined(layout) {\n  return (layout == Layout.FIXED ||\n      layout == Layout.FIXED_HEIGHT ||\n      layout == Layout.RESPONSIVE ||\n      layout == Layout.FILL ||\n      layout == Layout.FLEX_ITEM);\n}\n\n\n/**\n * Whether the tag is an internal (service) AMP tag.\n * @param {!Node|string} tag\n * @return {boolean}\n */\nexport function isInternalElement(tag) {\n  const tagName = (typeof tag == 'string') ? tag : tag.tagName;\n  return tagName && startsWith(tagName.toLowerCase(), 'i-');\n}\n\n\n/**\n * Parses the CSS length value. If no units specified, the assumed value is\n * \"px\". Returns undefined in case of parsing error.\n * @param {string|undefined} s\n * @return {!LengthDef|undefined}\n */\nexport function parseLength(s) {\n  if (typeof s == 'number') {\n    return s + 'px';\n  }\n  if (!s) {\n    return undefined;\n  }\n  if (!/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)?$/.test(s)) {\n    return undefined;\n  }\n  if (/^\\d+(\\.\\d+)?$/.test(s)) {\n    return s + 'px';\n  }\n  return s;\n}\n\n\n\n/**\n * Asserts that the supplied value is a non-percent CSS Length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {!LengthDef}\n */\nexport function assertLength(length) {\n  user().assert(\n      /^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|cm|mm|q|in|pc|pt)$/.test(length),\n      'Invalid length value: %s', length);\n  return /** @type {!LengthDef} */ (length);\n}\n\n\n\n\n/**\n * Asserts that the supplied value is a CSS Length value\n * (including percent unit).\n * @param {!LengthDef|string} length\n * @return {!LengthDef}\n */\nexport function assertLengthOrPercent(length) {\n  user().assert(/^\\d+(\\.\\d+)?(px|em|rem|vh|vw|vmin|vmax|%)$/.test(length),\n      'Invalid length or percent value: %s', length);\n  return length;\n}\n\n\n/**\n * Returns units from the CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {string}\n */\nexport function getLengthUnits(length) {\n  assertLength(length);\n  dev().assertString(length);\n  const m = user().assert(length.match(/[a-z]+/i),\n      'Failed to read units from %s', length);\n  return m[0];\n}\n\n\n/**\n * Returns the numeric value of a CSS length value.\n * @param {!LengthDef|string|null|undefined} length\n * @return {number|undefined}\n */\nexport function getLengthNumeral(length) {\n  const res = parseFloat(length);\n  return isFiniteNumber(res) ? res : undefined;\n}\n\n\n/**\n * Determines whether the tagName is a known element that has natural dimensions\n * in our runtime or the browser.\n * @param {string} tagName The element tag name.\n * @return {boolean}\n */\nexport function hasNaturalDimensions(tagName) {\n  tagName = tagName.toUpperCase();\n  return naturalDimensions_[tagName] !== undefined;\n}\n\n\n/**\n * Determines the default dimensions for an element which could vary across\n * different browser implementations, like <audio> for instance.\n * This operation can only be completed for an element whitelisted by\n * `hasNaturalDimensions`.\n * @param {!Element} element\n * @return {DimensionsDef}\n */\nexport function getNaturalDimensions(element) {\n  const tagName = element.tagName.toUpperCase();\n  dev().assert(naturalDimensions_[tagName] !== undefined);\n  if (!naturalDimensions_[tagName]) {\n    const doc = element.ownerDocument;\n    const naturalTagName = tagName.replace(/^AMP\\-/, '');\n    const temp = doc.createElement(naturalTagName);\n    // For audio, should no-op elsewhere.\n    temp.controls = true;\n    setStyles(temp, {\n      position: 'absolute',\n      visibility: 'hidden',\n    });\n    doc.body.appendChild(temp);\n    naturalDimensions_[tagName] = {\n      width: (temp./*OK*/offsetWidth || 1) + 'px',\n      height: (temp./*OK*/offsetHeight || 1) + 'px',\n    };\n    doc.body.removeChild(temp);\n  }\n  return /** @type {DimensionsDef} */ (naturalDimensions_[tagName]);\n}\n\n\n/**\n * Whether the loading can be shown for the specified elemeent. This set has\n * to be externalized since the element's implementation may not be\n * downloaded yet.\n * @param {!Element} element.\n * @return {boolean}\n */\nexport function isLoadingAllowed(element) {\n  const tagName = element.tagName.toUpperCase();\n  if (tagName == 'AMP-AD' || tagName == 'AMP-EMBED') {\n    return true;\n  }\n  return LOADING_ELEMENTS_[tagName] || false;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\nimport {getModeObject} from './mode-object';\nimport {isEnumValue} from './types';\n\n\n/** @const Time when this JS loaded.  */\nconst start = Date.now();\n\n/**\n * Triple zero width space.\n *\n * This is added to user error messages, so that we can later identify\n * them, when the only thing that we have is the message. This is the\n * case in many browsers when the global exception handler is invoked.\n *\n * @const {string}\n */\nexport const USER_ERROR_SENTINEL = '\\u200B\\u200B\\u200B';\n\n\n/**\n * @return {boolean} Whether this message was a user error.\n */\nexport function isUserErrorMessage(message) {\n  return message.indexOf(USER_ERROR_SENTINEL) >= 0;\n}\n\n\n/**\n * @enum {number}\n * @private Visible for testing only.\n */\nexport const LogLevel = {\n  OFF: 0,\n  ERROR: 1,\n  WARN: 2,\n  INFO: 3,\n  FINE: 4,\n};\n\n/**\n * Sets reportError function. Called from error.js to break cyclic\n * dependency.\n * @param {function(*, !Element=)|undefined} fn\n */\nexport function setReportError(fn) {\n  self.reportError = fn;\n}\n\n/**\n * Logging class.\n * @final\n * @private Visible for testing only.\n */\nexport class Log {\n  /**\n   * @param {!Window} win\n   * @param {function(!./mode.ModeDef):!LogLevel} levelFunc\n   * @param {string=} opt_suffix\n   */\n  constructor(win, levelFunc, opt_suffix) {\n    /**\n     * In tests we use the main test window instead of the iframe where\n     * the tests runs because only the former is relayed to the console.\n     * @const {!Window}\n     */\n    this.win = (getMode().test && win.AMP_TEST_IFRAME) ? win.parent : win;\n\n    /** @private @const {function(!./mode.ModeDef):!LogLevel} */\n    this.levelFunc_ = levelFunc;\n\n    /** @private @const {!LogLevel} */\n    this.level_ = this.calcLevel_();\n\n    /** @private @const {string} */\n    this.suffix_ = opt_suffix || '';\n  }\n\n  /**\n   * @return {!LogLevel}\n   * @private\n   */\n  calcLevel_() {\n    // No console - can't enable logging.\n    if (!this.win.console || !this.win.console.log) {\n      return LogLevel.OFF;\n    }\n\n    // Logging has been explicitly disabled.\n    if (getMode().log == '0') {\n      return LogLevel.OFF;\n    }\n\n    // Logging is enabled for tests directly.\n    if (getMode().test && this.win.ENABLE_LOG) {\n      return LogLevel.FINE;\n    }\n\n    // LocalDev by default allows INFO level, unless overriden by `#log`.\n    if (getMode().localDev && !getMode().log) {\n      return LogLevel.INFO;\n    }\n\n    // Delegate to the specific resolver.\n    return this.levelFunc_(getModeObject());\n  }\n\n  /**\n   * @param {string} tag\n   * @param {string} level\n   * @param {!Array} messages\n   */\n  msg_(tag, level, messages) {\n    if (this.level_ != LogLevel.OFF) {\n      let fn = this.win.console.log;\n      if (level == 'ERROR') {\n        fn = this.win.console.error || fn;\n      } else if (level == 'INFO') {\n        fn = this.win.console.info || fn;\n      } else if (level == 'WARN') {\n        fn = this.win.console.warn || fn;\n      }\n      messages.unshift(Date.now() - start, '[' + tag + ']');\n      fn.apply(this.win.console, messages);\n    }\n  }\n\n  /**\n   * Whether the logging is enabled.\n   * @return {boolean}\n   */\n  isEnabled() {\n    return this.level_ != LogLevel.OFF;\n  }\n\n  /**\n   * Reports a fine-grained message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  fine(tag, var_args) {\n    if (this.level_ >= LogLevel.FINE) {\n      this.msg_(tag, 'FINE', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a informational message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  info(tag, var_args) {\n    if (this.level_ >= LogLevel.INFO) {\n      this.msg_(tag, 'INFO', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports a warning message.\n   * @param {string} tag\n   * @param {...*} var_args\n   */\n  warn(tag, var_args) {\n    if (this.level_ >= LogLevel.WARN) {\n      this.msg_(tag, 'WARN', Array.prototype.slice.call(arguments, 1));\n    }\n  }\n\n  /**\n   * Reports an error message. If the logging is disabled, the error is rethrown\n   * asynchronously.\n   * @param {string} tag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   * @private\n   */\n  error_(tag, var_args) {\n    if (this.level_ >= LogLevel.ERROR) {\n      this.msg_(tag, 'ERROR', Array.prototype.slice.call(arguments, 1));\n    } else {\n      const error = createErrorVargs.apply(null,\n          Array.prototype.slice.call(arguments, 1));\n      this.prepareError_(error);\n      return error;\n    }\n  }\n\n  /**\n   * Reports an error message.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   * @return {!Error|undefined}\n   */\n  error(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      // reportError is installed globally per window in the entry point.\n      self.reportError(error);\n    }\n  }\n\n  /**\n   * Reports an error message and marks with an expected property. If the\n   * logging is disabled, the error is rethrown asynchronously.\n   * @param {string} unusedTag\n   * @param {...*} var_args\n   */\n  expectedError(unusedTag, var_args) {\n    const error = this.error_.apply(this, arguments);\n    if (error) {\n      error.expected = true;\n      // reportError is installed globally per window in the entry point.\n      self.reportError(error);\n    }\n  }\n\n  /**\n   * Creates an error object.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    return error;\n  }\n\n  /**\n   * Creates an error object with its expected property set to true.\n   * @param {...*} var_args\n   * @return {!Error}\n   */\n  createExpectedError(var_args) {\n    const error = createErrorVargs.apply(null, arguments);\n    this.prepareError_(error);\n    error.expected = true;\n    return error;\n  }\n\n  /**\n   * Throws an error if the first argument isn't trueish.\n   *\n   * Supports argument substitution into the message via %s placeholders.\n   *\n   * Throws an error object that has two extra properties:\n   * - associatedElement: This is the first element provided in the var args.\n   *   It can be used for improved display of error messages.\n   * - messageArray: The elements of the substituted message as non-stringified\n   *   elements in an array. When e.g. passed to console.error this yields\n   *   native displays of things like HTML elements.\n   *\n   * @param {T} shouldBeTrueish The value to assert. The assert fails if it does\n   *     not evaluate to true.\n   * @param {string=} opt_message The assertion message\n   * @param {...*} var_args Arguments substituted into %s in the message.\n   * @return {T} The value of shouldBeTrueish.\n   * @template T\n   */\n  /*eslint \"google-camelcase/google-camelcase\": 0*/\n  assert(shouldBeTrueish, opt_message, var_args) {\n    let firstElement;\n    if (!shouldBeTrueish) {\n      const message = opt_message || 'Assertion failed';\n      const splitMessage = message.split('%s');\n      const first = splitMessage.shift();\n      let formatted = first;\n      const messageArray = [];\n      pushIfNonEmpty(messageArray, first);\n      for (let i = 2; i < arguments.length; i++) {\n        const val = arguments[i];\n        if (val && val.tagName) {\n          firstElement = val;\n        }\n        const nextConstant = splitMessage.shift();\n        messageArray.push(val);\n        pushIfNonEmpty(messageArray, nextConstant.trim());\n        formatted += toString(val) + nextConstant;\n      }\n      const e = new Error(formatted);\n      e.fromAssert = true;\n      e.associatedElement = firstElement;\n      e.messageArray = messageArray;\n      this.prepareError_(e);\n      // reportError is installed globally per window in the entry point.\n      self.reportError(e);\n      throw e;\n    }\n    return shouldBeTrueish;\n  }\n\n  /**\n   * Throws an error if the first argument isn't an Element\n   *\n   * Otherwise see `assert` for usage\n   *\n   * @param {*} shouldBeElement\n   * @param {string=} opt_message The assertion message\n   * @return {!Element} The value of shouldBeTrueish.\n   * @template T\n   */\n  /*eslint \"google-camelcase/google-camelcase\": 2*/\n  assertElement(shouldBeElement, opt_message) {\n    const shouldBeTrueish = shouldBeElement && shouldBeElement.nodeType == 1;\n    this.assert(shouldBeTrueish, (opt_message || 'Element expected') + ': %s',\n        shouldBeElement);\n    return /** @type {!Element} */ (shouldBeElement);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a string. The string can\n   * be empty.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeString\n   * @param {string=} opt_message The assertion message\n   * @return {string} The string value. Can be an empty string.\n   */\n  /*eslint \"google-camelcase/google-camelcase\": 2*/\n  assertString(shouldBeString, opt_message) {\n    this.assert(typeof shouldBeString == 'string',\n        (opt_message || 'String expected') + ': %s', shouldBeString);\n    return /** @type {string} */ (shouldBeString);\n  }\n\n  /**\n   * Throws an error if the first argument isn't a number. The allowed values\n   * include `0` and `NaN`.\n   *\n   * For more details see `assert`.\n   *\n   * @param {*} shouldBeNumber\n   * @param {string=} opt_message The assertion message\n   * @return {number} The number value. The allowed values include `0`\n   *   and `NaN`.\n   */\n  assertNumber(shouldBeNumber, opt_message) {\n    this.assert(typeof shouldBeNumber == 'number',\n        (opt_message || 'Number expected') + ': %s', shouldBeNumber);\n    return /** @type {number} */ (shouldBeNumber);\n  }\n\n  /**\n   * Asserts and returns the enum value. If the enum doesn't contain such a value,\n   * the error is thrown.\n   *\n   * @param {!Object<T>} enumObj\n   * @param {string} s\n   * @param {string=} opt_enumName\n   * @return T\n   * @template T\n   */\n  /*eslint \"google-camelcase/google-camelcase\": 2*/\n  assertEnumValue(enumObj, s, opt_enumName) {\n    if (isEnumValue(enumObj, s)) {\n      return s;\n    }\n    this.assert(false,\n        'Unknown %s value: \"%s\"',\n        opt_enumName || 'enum', s);\n  }\n\n  /**\n   * @param {!Error} error\n   * @private\n   */\n  prepareError_(error) {\n    error = duplicateErrorIfNecessary(error);\n    if (this.suffix_) {\n      if (!error.message) {\n        error.message = this.suffix_;\n      } else if (error.message.indexOf(this.suffix_) == -1) {\n        error.message += this.suffix_;\n      }\n    } else if (isUserErrorMessage(error.message)) {\n      error.message = error.message.replace(USER_ERROR_SENTINEL, '');\n    }\n  }\n}\n\n\n/**\n * @param {string|!Element} val\n * @return {string}\n */\nfunction toString(val) {\n  // Do check equivalent to `val instanceof Element` without cross-window bug\n  if (val && val.nodeType == 1) {\n    return val.tagName.toLowerCase() + (val.id ? '#' + val.id : '');\n  }\n  return /** @type {string} */ (val);\n}\n\n\n/**\n * @param {!Array} array\n * @param {*} val\n */\nfunction pushIfNonEmpty(array, val) {\n  if (val != '') {\n    array.push(val);\n  }\n}\n\n/**\n * Some exceptions (DOMException, namely) have read-only message.\n * @param {!Error} error\n * @return {!Error};\n */\nexport function duplicateErrorIfNecessary(error) {\n  const message = error.message;\n  const test = String(Math.random());\n  error.message = test;\n\n  if (error.message === test) {\n    error.message = message;\n    return error;\n  }\n\n  const e = new Error(error.message);\n  // Copy all the extraneous things we attach.\n  for (const prop in error) {\n    e[prop] = error[prop];\n  }\n  // Ensure these are copied.\n  e.stack = error.stack;\n  return e;\n}\n\n/**\n * @param {...*} var_args\n * @return {!Error}\n * @private\n */\nfunction createErrorVargs(var_args) {\n  let error = null;\n  let message = '';\n  for (let i = 0; i < arguments.length; i++) {\n    const arg = arguments[i];\n    if (arg instanceof Error && !error) {\n      error = duplicateErrorIfNecessary(arg);\n    } else {\n      if (message) {\n        message += ' ';\n      }\n      message += arg;\n    }\n  }\n\n  if (!error) {\n    error = new Error(message);\n  } else if (message) {\n    error.message = message + ': ' + error.message;\n  }\n  return error;\n}\n\n\n/**\n * Rethrows the error without terminating the current context. This preserves\n * whether the original error designation is a user error or a dev error.\n * @param {...*} var_args\n */\nexport function rethrowAsync(var_args) {\n  const error = createErrorVargs.apply(null, arguments);\n  setTimeout(() => {\n    // reportError is installed globally per window in the entry point.\n    self.reportError(error);\n    throw error;\n  });\n}\n\n\n/**\n * Cache for logs. We do not use a Service since the service module depends\n * on Log and closure literally can't even.\n * @type {{user: ?Log, dev: ?Log}}\n */\nself.log = (self.log || {\n  user: null,\n  dev: null,\n});\n\nconst logs = self.log;\n\n/**\n * Eventually holds a constructor for Log objects. Lazily initialized, so we\n * can avoid ever referencing the real constructor except in JS binaries\n * that actually want to include the implementation.\n * @type {?Function}\n */\nlet logConstructor = null;\n\n\nexport function initLogConstructor() {\n  logConstructor = Log;\n  // Initialize instances for use. If a binary (an extension for example) that\n  // does not call `initLogConstructor` invokes `dev()` or `user()` earlier\n  // than the binary that does call `initLogConstructor` (amp.js), the extension\n  // will throw an error as that extension will never be able to initialize\n  // the log instances and we also don't want it to call `initLogConstructor`\n  // either (since that will cause the Log implementation to be bundled into that\n  // binary). So we must initialize the instances eagerly so that they are\n  // ready for use (stored globally) after the main binary calls\n  // `initLogConstructor`.\n  dev();\n  user();\n}\n\nexport function resetLogConstructorForTesting() {\n  logConstructor = null;\n}\n\n\n/**\n * Publisher level log.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Development mode is enabled via `#development=1` or logging is explicitly\n *     enabled via `#log=D` where D >= 1.\n *\n * @return {!Log}\n */\nexport function user() {\n  if (logs.user) {\n    return logs.user;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return logs.user = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (mode.development || logNum >= 1) {\n      return LogLevel.FINE;\n    }\n    return LogLevel.OFF;\n  }, USER_ERROR_SENTINEL);\n}\n\n\n/**\n * AMP development log. Calls to `devLog().assert` and `dev.fine` are stripped in\n * the PROD binary. However, `devLog().assert` result is preserved in either case.\n *\n * Enabled in the following conditions:\n *  1. Not disabled using `#log=0`.\n *  2. Logging is explicitly enabled via `#log=D`, where D >= 2.\n *\n * @return {!Log}\n */\nexport function dev() {\n  if (logs.dev) {\n    return logs.dev;\n  }\n  if (!logConstructor) {\n    throw new Error('failed to call initLogConstructor');\n  }\n  return logs.dev = new logConstructor(self, mode => {\n    const logNum = parseInt(mode.log, 10);\n    if (logNum >= 3) {\n      return LogLevel.FINE;\n    }\n    if (logNum >= 2) {\n      return LogLevel.INFO;\n    }\n    return LogLevel.OFF;\n  });\n}\n","/**\n * Copyright 2016 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {getMode} from './mode';\n\n/**\n * Provides info about the current app. This return value may be cached and\n * passed around as it will always be DCE'd.\n * @param {?Window=} opt_win\n * @return {!./mode.ModeDef}\n */\nexport function getModeObject(opt_win) {\n  return {\n    localDev: getMode(opt_win).localDev,\n    development: getMode(opt_win).development,\n    filter: getMode(opt_win).filter,\n    minified: getMode(opt_win).minified,\n    lite: getMode(opt_win).lite,\n    test: getMode(opt_win).test,\n    log: getMode(opt_win).log,\n    version: getMode(opt_win).version,\n    rtvVersion: getMode(opt_win).rtvVersion,\n  };\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {startsWith} from './string';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * @typedef {{\n *   localDev: boolean,\n *   development: boolean,\n *   filter: (string|undefined),\n *   minified: boolean,\n *   lite: boolean,\n *   test: boolean,\n *   log: (string|undefined),\n *   version: string,\n *   rtvVersion: string,\n * }}\n */\nexport let ModeDef;\n\n/** @type {string} */\nconst version = '$internalRuntimeVersion$';\n\n/**\n * `rtvVersion` is the prefixed version we serve off of the cdn.\n * The prefix denotes canary(00) or prod(01) or an experiment version ( > 01).\n * @type {string}\n */\nlet rtvVersion = '';\n\n/**\n * A #querySelector query to see if we have any scripts with development paths.\n * @type {string}\n */\nconst developmentScriptQuery = 'script[src*=\"/dist/\"],script[src*=\"/base/\"]';\n\n/**\n * Provides info about the current app.\n * @param {?Window=} opt_win\n * @return {!ModeDef}\n */\nexport function getMode(opt_win) {\n  const win = opt_win || self;\n  if (win.AMP_MODE) {\n    return win.AMP_MODE;\n  }\n  return win.AMP_MODE = getMode_(win);\n}\n\n/**\n * Provides info about the current app.\n * @param {!Window} win\n * @return {!ModeDef}\n */\nfunction getMode_(win) {\n  // For 3p integration code\n  if (win.context && win.context.mode) {\n    return win.context.mode;\n  }\n\n  // Magic constants that are replaced by closure compiler.\n  // IS_MINIFIED is always replaced with true when closure compiler is used\n  // while IS_DEV is only replaced when the --fortesting flag is NOT used.\n  const IS_DEV = true;\n  const IS_MINIFIED = false;\n  const FORCE_LOCALDEV = !!(self.AMP_CONFIG && self.AMP_CONFIG.localDev);\n  const AMP_CONFIG_3P_FRAME_HOST = self.AMP_CONFIG &&\n      self.AMP_CONFIG.thirdPartyFrameHost;\n\n  const isLocalDev = IS_DEV && !!(win.location.hostname == 'localhost' ||\n      (FORCE_LOCALDEV && win.location.hostname == AMP_CONFIG_3P_FRAME_HOST) ||\n      (win.location.ancestorOrigins && win.location.ancestorOrigins[0] &&\n        startsWith(win.location.ancestorOrigins[0], 'http://localhost:'))) &&\n      // Filter out localhost running against a prod script.\n      // Because all allowed scripts are ours, we know that these can only\n      // occur during local dev.\n      (!win.document || !!win.document.querySelector(developmentScriptQuery));\n\n  const hashQuery = parseQueryString_(\n      // location.originalHash is set by the viewer when it removes the fragment\n      // from the URL.\n      win.location.originalHash || win.location.hash);\n\n  const searchQuery = parseQueryString_(win.location.search);\n\n  if (!rtvVersion) {\n    rtvVersion = getRtvVersion(win, isLocalDev);\n  }\n\n  // The `minified`, `test` and `localDev` properties are replaced\n  // as boolean literals when we run `gulp dist` without the `--fortesting`\n  // flags. This improved DCE on the production file we deploy as the code\n  // paths for localhost/testing/development are eliminated.\n  return {\n    localDev: isLocalDev,\n    // Triggers validation\n    development: !!(hashQuery['development'] == '1' ||\n        win.AMP_DEV_MODE),\n    examiner: hashQuery['development'] == '2',\n    // Allows filtering validation errors by error category. For the\n    // available categories, see ErrorCategory in validator/validator.proto.\n    filter: hashQuery['filter'],\n    minified: IS_MINIFIED,\n    // Whether document is in an amp-lite viewer. It signal that the user\n    // would prefer to use less bandwidth.\n    lite: searchQuery['amp_lite'] != undefined,\n    test: IS_DEV && !!(win.AMP_TEST || win.__karma__),\n    log: hashQuery['log'],\n    version,\n    rtvVersion,\n  };\n}\n\n/**\n * Retrieve the `rtvVersion` which will have a numeric prefix\n * denoting canary/prod/experiment (unless `isLocalDev` is true).\n *\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n */\nfunction getRtvVersion(win, isLocalDev) {\n  // If it's local dev then we won't actually have a full version so\n  // just use the version.\n  if (isLocalDev) {\n    return version;\n  }\n\n  if (win.AMP_CONFIG && win.AMP_CONFIG.v) {\n    return win.AMP_CONFIG.v;\n  }\n\n  // Currently `$internalRuntimeVersion$` and thus `mode.version` contain only\n  // major version. The full version however must also carry the minor version.\n  // We will default to production default `01` minor version for now.\n  // TODO(erwinmombay): decide whether $internalRuntimeVersion$ should contain\n  // minor version.\n  return `01${version}`;\n}\n\n\n/**\n * @param {!Window} win\n * @param {boolean} isLocalDev\n * @return {string}\n * @visibleForTesting\n */\nexport function getRtvVersionForTesting(win, isLocalDev) {\n  return getRtvVersion(win, isLocalDev);\n}\n\n\n/** @visibleForTesting */\nexport function resetRtvVersionForTesting() {\n  rtvVersion = '';\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @param {string} _match\n * @param {string} character\n * @return {string}\n */\nfunction toUpperCase(_match, character) {\n  return character.toUpperCase();\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes removed and character after to upper case.\n * visibleForTesting\n */\nexport function dashToCamelCase(name) {\n  return name.replace(/-([a-z])/g, toUpperCase);\n}\n\n/**\n * @param {string} name Attribute name with dashes\n * @return {string} Dashes replaced by underlines.\n */\nexport function dashToUnderline(name) {\n  return name.replace('-', '_');\n}\n\n/**\n * Polyfill for String.prototype.endsWith.\n * @param {string} string\n * @param {string} suffix\n * @return {boolean}\n */\nexport function endsWith(string, suffix) {\n  const index = string.length - suffix.length;\n  return index >= 0 && string.indexOf(suffix, index) == index;\n}\n\n/**\n * Polyfill for String.prototype.startsWith.\n * @param {string} string\n * @param {string} prefix\n * @return {boolean}\n */\nexport function startsWith(string, prefix) {\n  if (prefix.length > string.length) {\n    return false;\n  }\n  return string.lastIndexOf(prefix, 0) == 0;\n}\n\n/**\n * Expands placeholders in a given template string with values.\n *\n * Placeholders use ${key-name} syntax and are replaced with the value\n * returned from the given getter function.\n *\n * @param {string} template The template string to expand.\n * @param {!function(string):*} getter Function used to retrieve a value for a\n *   placeholder. Returns values will be coerced into strings.\n * @param {number=} opt_maxIterations Number of times to expand the template.\n *   Defaults to 1, but should be set to a larger value your placeholder tokens\n *   can be expanded to other placeholder tokens. Take caution with large values\n *   as recursively expanding a string can be exponentially expensive.\n */\nexport function expandTemplate(template, getter, opt_maxIterations) {\n  const maxIterations = opt_maxIterations || 1;\n  for (let i = 0; i < maxIterations; i++) {\n    let matches = 0;\n    template = template.replace(/\\${([^}]*)}/g, (_a, b) => {\n      matches++;\n      return getter(b);\n    });\n    if (!matches) {\n      break;\n    }\n  }\n  return template;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Note: loaded by 3p system. Cannot rely on babel polyfills.\nimport {map} from './utils/object.js';\nimport {startsWith} from './string';\n\n\n/** @type {Object<string, string>} */\nlet propertyNameCache;\n\n/** @const {!Array<string>} */\nconst vendorPrefixes = ['Webkit', 'webkit', 'Moz', 'moz', 'ms', 'O', 'o'];\n\n\n/**\n * @export\n * @param {string} camelCase camel cased string\n * @return {string} title cased string\n */\nexport function camelCaseToTitleCase(camelCase) {\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n}\n\n/**\n * Checks the style if a prefixed version of a property exists and returns\n * it or returns an empty string.\n * @private\n * @param {!Object} style\n * @param {string} titleCase the title case version of a css property name\n * @return {string} the prefixed property name or null.\n */\nfunction getVendorJsPropertyName_(style, titleCase) {\n  for (let i = 0; i < vendorPrefixes.length; i++) {\n    const propertyName = vendorPrefixes[i] + titleCase;\n    if (style[propertyName] !== undefined) {\n      return propertyName;\n    }\n  }\n  return '';\n}\n\n/**\n * Returns the possibly prefixed JavaScript property name of a style property\n * (ex. WebkitTransitionDuration) given a camelCase'd version of the property\n * (ex. transitionDuration).\n * @export\n * @param {!Object} style\n * @param {string} camelCase the camel cased version of a css property name\n * @param {boolean=} opt_bypassCache bypass the memoized cache of property\n *   mapping\n * @return {string}\n */\nexport function getVendorJsPropertyName(style, camelCase, opt_bypassCache) {\n  if (startsWith(camelCase, '--')) {\n    // CSS vars are returned as is.\n    return camelCase;\n  }\n  if (!propertyNameCache) {\n    propertyNameCache = map();\n  }\n  let propertyName = propertyNameCache[camelCase];\n  if (!propertyName || opt_bypassCache) {\n    propertyName = camelCase;\n    if (style[camelCase] === undefined) {\n      const titleCase = camelCaseToTitleCase(camelCase);\n      const prefixedPropertyName = getVendorJsPropertyName_(style, titleCase);\n\n      if (style[prefixedPropertyName] !== undefined) {\n        propertyName = prefixedPropertyName;\n      }\n    }\n    if (!opt_bypassCache) {\n      propertyNameCache[camelCase] = propertyName;\n    }\n  }\n  return propertyName;\n}\n\n\n/**\n * Sets the CSS style of the specified element with optional units, e.g. \"px\".\n * @param {Element} element\n * @param {string} property\n * @param {*} value\n * @param {string=} opt_units\n * @param {boolean=} opt_bypassCache\n */\nexport function setStyle(element, property, value, opt_units, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(element.style, property,\n      opt_bypassCache);\n  if (propertyName) {\n    element.style[propertyName] = opt_units ? value + opt_units : value;\n  }\n}\n\n\n/**\n * Returns the value of the CSS style of the specified element.\n * @param {!Element} element\n * @param {string} property\n * @param {boolean=} opt_bypassCache\n * @return {*}\n */\nexport function getStyle(element, property, opt_bypassCache) {\n  const propertyName = getVendorJsPropertyName(element.style, property,\n      opt_bypassCache);\n  if (!propertyName) {\n    return undefined;\n  }\n  return element.style[propertyName];\n}\n\n\n/**\n * Sets the CSS styles of the specified element. The styles\n * a specified as a map from CSS property names to their values.\n * @param {!Element} element\n * @param {!Object<string, *>} styles\n */\nexport function setStyles(element, styles) {\n  for (const k in styles) {\n    setStyle(element, k, styles[k]);\n  }\n}\n\n\n/**\n * Shows or hides the specified element.\n * @param {!Element} element\n * @param {boolean=} opt_display\n */\nexport function toggle(element, opt_display) {\n  if (opt_display === undefined) {\n    opt_display = getStyle(element, 'display') == 'none';\n  }\n  setStyle(element, 'display', opt_display ? '' : 'none');\n}\n\n\n/**\n * Returns a pixel value.\n * @param {number} value\n * @return {string}\n */\nexport function px(value) {\n  return value + 'px';\n}\n\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function translateX(value) {\n  if (typeof value == 'string') {\n    return `translateX(${value})`;\n  }\n  return `translateX(${px(value)})`;\n}\n\n\n/**\n * Returns a \"translateX\" for CSS \"transform\" property.\n * @param {number|string} x\n * @param {(number|string)=} opt_y\n * @return {string}\n */\nexport function translate(x, opt_y) {\n  if (typeof x == 'number') {\n    x = px(x);\n  }\n  if (opt_y === undefined) {\n    return `translate(${x})`;\n  }\n  if (typeof opt_y == 'number') {\n    opt_y = px(opt_y);\n  }\n  return `translate(${x},${opt_y})`;\n}\n\n\n/**\n * Returns a \"scale\" for CSS \"transform\" property.\n * @param {number|string} value\n * @return {string}\n */\nexport function scale(value) {\n  return `scale(${value})`;\n}\n\n/**\n * Remove alpha value from a rgba color value.\n * Return the new color property with alpha equals if has the alpha value.\n * Caller needs to make sure the input color value is a valid rgba/rgb value\n * @param {string} rgbaColor\n * @return {string}\n */\nexport function removeAlphaFromColor(rgbaColor) {\n  return rgbaColor.replace(\n      /\\(([^,]+),([^,]+),([^,)]+),[^)]+\\)/g, '($1,$2,$3, 1)');\n}\n\n/**\n * Gets the computed style of the element. The helper is necessary to enforce\n * the possible `null` value returned by a buggy Firefox.\n *\n * @param {!Window} win\n * @param {!Element} el\n * @return {!Object<string, string>}\n */\nexport function computedStyle(win, el) {\n  const style = /** @type {?CSSStyleDeclaration} */(win.getComputedStyle(el));\n  return /** @type {!Object<string, string>} */(style) || map();\n}\n\n\n/**\n * Resets styles that were set dynamically (i.e. inline)\n * @param {!Element} element\n * @param {!Array<string>} properties\n */\nexport function resetStyles(element, properties) {\n  const styleObj = {};\n  properties.forEach(prop => {\n    styleObj[prop] = null;\n  });\n  setStyles(element, styleObj);\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* @const */\nconst toString_ = Object.prototype.toString;\n\n/**\n * Returns the ECMA [[Class]] of a value\n * @param {*} value\n * @return {string}\n */\nfunction toString(value) {\n  return toString_.call(value);\n}\n\n/**\n * Determines if value is actually an Array.\n * @param {*} value\n * @return {boolean}\n */\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\n/**\n * Converts an array-like object to an array.\n * @param {?IArrayLike<T>|string} arrayLike\n * @return {!Array<T>}\n * @template T\n */\nexport function toArray(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  }\n  const array = new Array(arrayLike.length);\n  for (let i = 0; i < arrayLike.length; i++) {\n    array[i] = arrayLike[i];\n  }\n  return array;\n}\n\n/**\n * Determines if value is actually an Object.\n * @param {*} value\n * @return {boolean}\n */\nexport function isObject(value) {\n  return toString(value) === '[object Object]';\n}\n\n/**\n * Determines if value is of number type and finite.\n * NaN and Infinity are not considered a finite number.\n * String numbers are not considered numbers.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFiniteNumber(value) {\n  return (typeof value === 'number' && isFinite(value));\n}\n\n/**\n * Determines if value is of FormData type.\n * @param {*} value\n * @return {boolean}\n */\nexport function isFormData(value) {\n  return toString(value) === '[object FormData]';\n}\n\n/**\n * Checks whether `s` is a valid value of `enumObj`.\n *\n * @param {!Object<T>} enumObj\n * @param {T} s\n * @return {boolean}\n * @template T\n */\nexport function isEnumValue(enumObj, s) {\n  for (const k in enumObj) {\n    if (enumObj[k] === s) {\n      return true;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst regex = /(?:^[#?]?|&)([^=&]+)(?:=([^&]*))?/g;\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * DO NOT import the function from this file. Instead, import parseQueryString\n * from `src/url.js`.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString_(queryString) {\n  const params = /** @type {!JsonObject} */ (Object.create(null));\n  if (!queryString) {\n    return params;\n  }\n\n  let match;\n  while ((match = regex.exec(queryString))) {\n    const name = decodeURIComponent(match[1]).trim();\n    const value = match[2] ? decodeURIComponent(match[2]).trim() : '';\n    params[name] = value;\n  }\n  return params;\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {startsWith, endsWith} from './string';\nimport {user} from './log';\nimport {getMode} from './mode';\nimport {urls} from './config';\nimport {isArray} from './types';\nimport {parseQueryString_} from './url-parse-query-string';\n\n/**\n * Cached a-tag to avoid memory allocation during URL parsing.\n * @type {HTMLAnchorElement}\n */\nlet a;\n\n/**\n * We cached all parsed URLs. As of now there are no use cases\n * of AMP docs that would ever parse an actual large number of URLs,\n * but we often parse the same one over and over again.\n * @type {Object<string, !Location>}\n */\nlet cache;\n\n/** @private @const Matches amp_js_* paramters in query string. */\nconst AMP_JS_PARAMS_REGEX = /[?&]amp_js[^&]*/;\n\nconst INVALID_PROTOCOLS = [\n  /*eslint no-script-url: 0*/ 'javascript:',\n  /*eslint no-script-url: 0*/ 'data:',\n  /*eslint no-script-url: 0*/ 'vbscript:',\n];\n\n/** @const {string} */\nexport const SOURCE_ORIGIN_PARAM = '__amp_source_origin';\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * Consider the returned object immutable. This is enforced during\n * testing by freezing the object.\n * @param {string} url\n * @param {boolean=} opt_nocache\n * @return {!Location}\n */\nexport function parseUrl(url, opt_nocache) {\n  if (!a) {\n    a = /** @type {!HTMLAnchorElement} */ (self.document.createElement('a'));\n    cache = self.UrlCache || (self.UrlCache = Object.create(null));\n  }\n\n  const fromCache = cache[url];\n  if (fromCache) {\n    return fromCache;\n  }\n\n  const info = parseUrlWithA(a, url);\n\n  // Freeze during testing to avoid accidental mutation.\n  const frozen = (getMode().test && Object.freeze) ? Object.freeze(info) : info;\n\n  if (opt_nocache) {\n    return frozen;\n  }\n  return cache[url] = frozen;\n}\n\n/**\n * Returns a Location-like object for the given URL. If it is relative,\n * the URL gets resolved.\n * @param {!HTMLAnchorElement} a\n * @param {string} url\n * @return {!Location}\n * @restricted\n */\nexport function parseUrlWithA(a, url) {\n  a.href = url;\n\n  // IE11 doesn't provide full URL components when parsing relative URLs.\n  // Assigning to itself again does the trick #3449.\n  if (!a.protocol) {\n    a.href = a.href;\n  }\n\n  const info = /** @type {!Location} */({\n    href: a.href,\n    protocol: a.protocol,\n    host: a.host,\n    hostname: a.hostname,\n    port: a.port == '0' ? '' : a.port,\n    pathname: a.pathname,\n    search: a.search,\n    hash: a.hash,\n    origin: null,  // Set below.\n  });\n\n  // Some IE11 specific polyfills.\n  // 1) IE11 strips out the leading '/' in the pathname.\n  if (info.pathname[0] !== '/') {\n    info.pathname = '/' + info.pathname;\n  }\n\n  // 2) For URLs with implicit ports, IE11 parses to default ports while\n  // other browsers leave the port field empty.\n  if ((info.protocol == 'http:' && info.port == 80)\n      || (info.protocol == 'https:' && info.port == 443)) {\n    info.port = '';\n    info.host = info.hostname;\n  }\n\n  // For data URI a.origin is equal to the string 'null' which is not useful.\n  // We instead return the actual origin which is the full URL.\n  if (a.origin && a.origin != 'null') {\n    info.origin = a.origin;\n  } else if (info.protocol == 'data:' || !info.host) {\n    info.origin = info.href;\n  } else {\n    info.origin = info.protocol + '//' + info.host;\n  }\n  return info;\n}\n\n/**\n * Appends the string just before the fragment part (or optionally\n * to the front of the query string) of the URL.\n * @param {string} url\n * @param {string} paramString\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function appendEncodedParamStringToUrl(url, paramString,\n  opt_addToFront) {\n  if (!paramString) {\n    return url;\n  }\n  const mainAndFragment = url.split('#', 2);\n  const mainAndQuery = mainAndFragment[0].split('?', 2);\n\n  let newUrl = mainAndQuery[0] + (\n      mainAndQuery[1]\n          ? (opt_addToFront\n              ? `?${paramString}&${mainAndQuery[1]}`\n              : `?${mainAndQuery[1]}&${paramString}`)\n          : `?${paramString}`);\n  newUrl += mainAndFragment[1] ? `#${mainAndFragment[1]}` : '';\n  return newUrl;\n}\n/**\n * Appends a query string field and value to a url. `key` and `value`\n * will be ran through `encodeURIComponent` before appending.\n * @param {string} url\n * @param {string} key\n * @param {string} value\n * @param {boolean=} opt_addToFront\n * @return {string}\n */\nexport function addParamToUrl(url, key, value, opt_addToFront) {\n  const field = `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  return appendEncodedParamStringToUrl(url, field, opt_addToFront);\n}\n\n/**\n * Appends query string fields and values to a url. The `params` objects'\n * `key`s and `value`s will be transformed into query string keys/values.\n * @param {string} url\n * @param {!Object<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function addParamsToUrl(url, params) {\n  return appendEncodedParamStringToUrl(url, serializeQueryString(params));\n}\n\n/**\n * Serializes the passed parameter map into a query string with both keys\n * and values encoded.\n * @param {!Object<string, string|!Array<string>>} params\n * @return {string}\n */\nexport function serializeQueryString(params) {\n  const s = [];\n  for (const k in params) {\n    const v = params[k];\n    if (v == null) {\n      continue;\n    } else if (isArray(v)) {\n      for (let i = 0; i < v.length; i++) {\n        const sv = /** @type {string} */ (v[i]);\n        s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n      }\n    } else {\n      const sv = /** @type {string} */ (v);\n      s.push(`${encodeURIComponent(k)}=${encodeURIComponent(sv)}`);\n    }\n  }\n  return s.join('&');\n}\n\n/**\n * Returns `true` if the URL is secure: either HTTPS or localhost (for testing).\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isSecureUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrl(url);\n  }\n  return (url.protocol == 'https:' ||\n      url.hostname == 'localhost' ||\n      endsWith(url.hostname, '.localhost'));\n}\n\n/**\n * Asserts that a given url is HTTPS or protocol relative. It's a user-level\n * assert.\n *\n * Provides an exception for localhost.\n *\n * @param {?string|undefined} urlString\n * @param {!Element|string} elementContext Element where the url was found.\n * @param {string=} sourceName Used for error messages.\n * @return {string}\n */\nexport function assertHttpsUrl(\n    urlString, elementContext, sourceName = 'source') {\n  user().assert(urlString != null, '%s %s must be available',\n      elementContext, sourceName);\n  // (erwinm, #4560): type cast necessary until #4560 is fixed.\n  const theUrlString = /** @type {string} */ (urlString);\n  user().assert(isSecureUrl(theUrlString) || /^(\\/\\/)/.test(theUrlString),\n      '%s %s must start with ' +\n      '\"https://\" or \"//\" or be relative and served from ' +\n      'either https or from localhost. Invalid value: %s',\n      elementContext, sourceName, theUrlString);\n  return theUrlString;\n}\n\n/**\n * Asserts that a given url is an absolute HTTP or HTTPS URL.\n * @param {string} urlString\n * @return {string}\n */\nexport function assertAbsoluteHttpOrHttpsUrl(urlString) {\n  user().assert(/^https?\\:/i.test(urlString),\n      'URL must start with \"http://\" or \"https://\". Invalid value: %s',\n      urlString);\n  return parseUrl(urlString).href;\n}\n\n\n/**\n * Parses the query string of an URL. This method returns a simple key/value\n * map. If there are duplicate keys the latest value is returned.\n *\n * This function is implemented in a separate file to avoid a circular\n * dependency.\n *\n * @param {string} queryString\n * @return {!JsonObject}\n */\nexport function parseQueryString(queryString) {\n  return parseQueryString_(queryString);\n}\n\n/**\n * Returns the URL without fragment. If URL doesn't contain fragment, the same\n * string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function removeFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return url;\n  }\n  return url.substring(0, index);\n}\n\n/**\n * Returns the fragment from the URL. If the URL doesn't contain fragment,\n * the empty string is returned.\n * @param {string} url\n * @return {string}\n */\nexport function getFragment(url) {\n  const index = url.indexOf('#');\n  if (index == -1) {\n    return '';\n  }\n  return url.substring(index);\n}\n\n/**\n * Returns whether the URL has the origin of a proxy.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isProxyOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrl(url);\n  }\n  return urls.cdnProxyRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL origin is localhost.\n * @param {string|!Location} url URL of an AMP document.\n * @return {boolean}\n */\nexport function isLocalhostOrigin(url) {\n  if (typeof url == 'string') {\n    url = parseUrl(url);\n  }\n  return urls.localhostRegex.test(url.origin);\n}\n\n/**\n * Returns whether the URL has valid protocol.\n * Deep link protocol is valid, but not javascript etc.\n * @param {string|!Location} url\n * @return {boolean}\n */\nexport function isProtocolValid(url) {\n  if (!url) {\n    return true;\n  }\n  if (typeof url == 'string') {\n    url = parseUrl(url);\n  }\n  return !INVALID_PROTOCOLS.includes(url.protocol);\n}\n\n/**\n * Removes parameters that start with amp js parameter pattern and returns the new\n * search string.\n * @param {string} urlSearch\n * @return {string}\n */\nfunction removeAmpJsParams(urlSearch) {\n  if (!urlSearch || urlSearch == '?') {\n    return '';\n  }\n  const search = urlSearch\n      .replace(AMP_JS_PARAMS_REGEX, '')\n      .replace(/^[?&]/, '');  // Removes first ? or &.\n  return search ? '?' + search : '';\n}\n\n/**\n * Returns the source URL of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string}\n */\nexport function getSourceUrl(url) {\n  if (typeof url == 'string') {\n    url = parseUrl(url);\n  }\n\n  // Not a proxy URL - return the URL itself.\n  if (!isProxyOrigin(url)) {\n    return url.href;\n  }\n\n  // A proxy URL.\n  // Example path that is being matched here.\n  // https://cdn.ampproject.org/c/s/www.origin.com/foo/\n  // The /s/ is optional and signals a secure origin.\n  const path = url.pathname.split('/');\n  const prefix = path[1];\n  user().assert(prefix == 'a' || prefix == 'c' || prefix == 'v',\n      'Unknown path prefix in url %s', url.href);\n  const domainOrHttpsSignal = path[2];\n  const origin = domainOrHttpsSignal == 's'\n      ? 'https://' + decodeURIComponent(path[3])\n      : 'http://' + decodeURIComponent(domainOrHttpsSignal);\n  // Sanity test that what we found looks like a domain.\n  user().assert(origin.indexOf('.') > 0, 'Expected a . in origin %s', origin);\n  path.splice(1, domainOrHttpsSignal == 's' ? 3 : 2);\n  return origin + path.join('/') + removeAmpJsParams(url.search) +\n      (url.hash || '');\n}\n\n/**\n * Returns the source origin of an AMP document for documents served\n * on a proxy origin or directly.\n * @param {string|!Location} url URL of an AMP document.\n * @return {string} The source origin of the URL.\n */\nexport function getSourceOrigin(url) {\n  return parseUrl(getSourceUrl(url)).origin;\n}\n\n/**\n * Returns absolute URL resolved based on the relative URL and the base.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n */\nexport function resolveRelativeUrl(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrl(baseUrl);\n  }\n  if (typeof URL == 'function') {\n    return new URL(relativeUrlString, baseUrl.href).toString();\n  }\n  return resolveRelativeUrlFallback_(relativeUrlString, baseUrl);\n}\n\n/**\n * Fallback for URL resolver when URL class is not available.\n * @param {string} relativeUrlString\n * @param {string|!Location} baseUrl\n * @return {string}\n * @private Visible for testing.\n */\nexport function resolveRelativeUrlFallback_(relativeUrlString, baseUrl) {\n  if (typeof baseUrl == 'string') {\n    baseUrl = parseUrl(baseUrl);\n  }\n  relativeUrlString = relativeUrlString.replace(/\\\\/g, '/');\n  const relativeUrl = parseUrl(relativeUrlString);\n\n  // Absolute URL.\n  if (startsWith(relativeUrlString.toLowerCase(), relativeUrl.protocol)) {\n    return relativeUrl.href;\n  }\n\n  // Protocol-relative URL.\n  if (startsWith(relativeUrlString, '//')) {\n    return baseUrl.protocol + relativeUrlString;\n  }\n\n  // Absolute path.\n  if (startsWith(relativeUrlString, '/')) {\n    return baseUrl.origin + relativeUrlString;\n  }\n\n  // Relative path.\n  return baseUrl.origin + baseUrl.pathname.replace(/\\/[^/]*$/, '/')\n      + relativeUrlString;\n}\n\n\n/**\n * Add \"__amp_source_origin\" query parameter to the URL.\n * @param {!Window} win\n * @param {string} url\n * @return {string}\n */\nexport function getCorsUrl(win, url) {\n  checkCorsUrl(url);\n  const sourceOrigin = getSourceOrigin(win.location.href);\n  return addParamToUrl(url, SOURCE_ORIGIN_PARAM, sourceOrigin);\n}\n\n\n/**\n * Checks if the url have __amp_source_origin and throws if it does.\n * @param {string} url\n */\nexport function checkCorsUrl(url) {\n  const parsedUrl = parseUrl(url);\n  const query = parseQueryString(parsedUrl.search);\n  user().assert(!(SOURCE_ORIGIN_PARAM in query),\n      'Source origin is not allowed in %s', url);\n}\n","/**\n * Copyright 2015 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {isObject} from '../types';\n\n/* @const */\nconst hasOwn_ = Object.prototype.hasOwnProperty;\n\n/**\n * Returns a map-like object.\n * If opt_initial is provided, copies its own properties into the\n * newly created object.\n * @param {T=} opt_initial This should typically be an object literal.\n * @return {T}\n * @template T\n */\nexport function map(opt_initial) {\n  const obj = Object.create(null);\n  if (opt_initial) {\n    Object.assign(obj, opt_initial);\n  }\n  return obj;\n}\n\n/**\n * Returns a `map`, and will always return a at-dict like object.\n * The JsonObject type is just a simple object that is a dict.\n * See\n * https://github.com/google/closure-compiler/wiki/@struct-and-@dict-Annotations\n * for what a dict is type-wise.\n * @param {!Object=} opt_initial\n * @return {!JsonObject}\n */\nexport function dict(opt_initial) {\n  return /** @type {!JsonObject} */ (map(opt_initial));\n}\n\n/**\n * Checks if the given key is a property in the map.\n *\n * @param {T}  obj a map like property.\n * @param {string}  key\n * @return {boolean}\n * @template T\n */\nexport function hasOwn(obj, key) {\n  return hasOwn_.call(obj, key);\n}\n\n/**\n * Returns obj[key] iff key is obj's own property (is not inherited).\n * Otherwise, returns undefined.\n *\n * @param {Object} obj\n * @param {string} key\n * @return {*}\n */\nexport function ownProperty(obj, key) {\n  if (hasOwn(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {!Object} target\n * @param {!Object} source\n * @param {number} maxDepth The maximum depth for deep merge, beyond which\n *    Object.assign will be used.\n * @return {!Object}\n * @throws {Error} if `source` contains a circular reference\n */\nfunction deepMerge_(target, source, maxDepth) {\n  // Keep track of seen objects to prevent infinite loops on objects with\n  // recursive references.\n  const seen = [];\n  // Traversal must be breadth-first so any object encountered for the first\n  // time does not have a reference  at a shallower depth. Otherwise, a\n  // circular reference found at depth == maxDepth could cause an unexpected\n  // change at a shallower depth if the same object exists at a shallower depth.\n  const queue = [{target, source, depth: 0}];\n  while (queue.length > 0) {\n    const {target, source, depth} = queue.shift();\n    if (seen.includes(source)) {\n      throw new Error('Source object contains circular references');\n    }\n    seen.push(source);\n    if (target === source) {\n      continue;\n    }\n    if (depth > maxDepth) {\n      Object.assign(target, source);\n      continue;\n    }\n    Object.keys(source).forEach(key => {\n      const newValue = source[key];\n      // Perform a deep merge IFF both a and b have the same property and\n      // the properties on both a and b are non-null plain objects.\n      if (hasOwn(target, key)) {\n        const oldValue = target[key];\n        if (isObject(newValue) && isObject(oldValue)) {\n          queue.push({target: oldValue, source: newValue, depth: depth + 1});\n          return;\n        }\n      }\n      target[key] = newValue;\n    });\n  }\n  return target;\n}\n\n/**\n * Deep merge object b into object a. Both a and b should only contain\n * primitives, arrays, and plain objects. For any conflicts, object b wins.\n * Arrays are replaced, not merged. Plain objects are recursively merged.\n * @param {!Object} target\n * @param {!Object} source\n * @param {number=} opt_maxDepth The maximum depth for deep merge,\n *     beyond which Object.assign will be used.\n * @return {!Object}\n * @throws {Error} if `source` contains a circular reference\n */\nexport function deepMerge(target, source, opt_maxDepth) {\n  return deepMerge_(target, source, opt_maxDepth || Number.POSITIVE_INFINITY);\n}\n"]}